openapi: 3.0.3
info:
  title: Auditoría Nutrial API
  version: 2.0.0
servers:
  - url: http://localhost:4000/api
paths:
  /health:
    get:
      summary: Verifica el estado del servicio
      responses:
        '200':
          description: Servicio disponible
  /auth/login:
    post:
      summary: Inicia sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Tokens emitidos
  /auth/refresh:
    post:
      summary: Refresca tokens
      responses:
        '200':
          description: Token renovado
  /projects:
    get:
      summary: Lista proyectos del usuario
    post:
      summary: Crea proyecto
  /projects/{projectId}:
    get:
      summary: Obtiene proyecto
    put:
      summary: Actualiza proyecto
    delete:
      summary: Elimina proyecto
  /projects/{projectId}/invite:
    post:
      summary: Invita miembro
  /data-request/{projectId}:
    get:
      summary: Lista checklist
    post:
      summary: Crea ítem
  /data-request/{projectId}/{itemId}:
    put:
      summary: Actualiza ítem
    delete:
      summary: Elimina ítem
  /surveys/{projectId}:
    get:
      summary: Lista encuestas
    post:
      summary: Crea encuesta
  /surveys/questions/{surveyId}:
    post:
      summary: Crea pregunta
  /surveys/{surveyId}/public-response:
    post:
      summary: Responde encuesta pública
  /surveys/{projectId}/{surveyId}/summary:
    get:
      summary: Resumen de encuesta
  /interviews/{projectId}:
    get:
      summary: Lista entrevistas
    post:
      summary: Crea entrevista
  /interviews/{projectId}/{interviewId}:
    put:
      summary: Actualiza entrevista
    delete:
      summary: Elimina entrevista
  /interviews/{projectId}/{interviewId}/audio:
    post:
      summary: Sube audio
  /process-assets/{projectId}:
    get:
      summary: Lista procesos
    post:
      summary: Crea proceso
  /process-assets/{projectId}/{processId}:
    put:
      summary: Actualiza proceso
    delete:
      summary: Elimina proceso
  /process-assets/{projectId}/{processId}/file:
    post:
      summary: Adjunta BPMN
  /systems/{category}/{projectId}:
    get:
      summary: Lista datos de sistemas
    post:
      summary: Crea registro
  /systems/{category}/{projectId}/{itemId}:
    put:
      summary: Actualiza registro
    delete:
      summary: Elimina registro
  /receptions/{projectId}:
    get:
      summary: Lista recepciones
    post:
      summary: Crea recepción
  /receptions/{projectId}/{receptionId}:
    put:
      summary: Actualiza recepción
    delete:
      summary: Elimina recepción
  /receptions/{projectId}/metrics/summary:
    get:
      summary: Métricas agregadas
  /risks:
    get:
      summary: Lista riesgos por proyecto
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: projectId
          schema:
            type: string
          required: true
          description: ID del proyecto
        - in: query
          name: rag
          schema:
            type: string
          required: false
          description: Filtro opcional por color RAG
      responses:
        '200':
          description: Listado de riesgos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Risk'
    post:
      summary: Crea un riesgo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskCreate'
      responses:
        '201':
          description: Riesgo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risk'
  /risks/{id}:
    patch:
      summary: Actualiza un riesgo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskUpdate'
      responses:
        '200':
          description: Riesgo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risk'
    delete:
      summary: Elimina un riesgo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Eliminado correctamente
  /findings:
    get:
      summary: Lista hallazgos por proyecto
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: projectId
          schema:
            type: string
          required: true
          description: ID del proyecto
      responses:
        '200':
          description: Listado de hallazgos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Finding'
    post:
      summary: Crea un hallazgo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingCreate'
      responses:
        '201':
          description: Hallazgo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
  /findings/{id}:
    patch:
      summary: Actualiza un hallazgo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingUpdate'
      responses:
        '200':
          description: Hallazgo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
    delete:
      summary: Elimina un hallazgo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Eliminado correctamente
  /poc/{projectId}:
    get:
      summary: Lista POC
    post:
      summary: Crea POC
  /poc/{projectId}/{itemId}:
    put:
      summary: Actualiza POC
    delete:
      summary: Elimina POC
  /decisions/{projectId}:
    get:
      summary: Lista decisiones
    post:
      summary: Crea decisión
  /decisions/{projectId}/{decisionId}:
    put:
      summary: Actualiza decisión
    delete:
      summary: Elimina decisión
  /kpis/{projectId}:
    get:
      summary: Lista KPIs
    post:
      summary: Crea KPI
  /kpis/{projectId}/{kpiId}:
    put:
      summary: Actualiza KPI
    delete:
      summary: Elimina KPI
  /export/excel:
    get:
      summary: Exporta Excel ZIP
  /export/pdf:
    get:
      summary: Exporta PDF
  /audit/{projectId}:
    get:
      summary: Audit trail del proyecto
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Risk:
      type: object
      properties:
        id:
          type: string
        projectId:
          type: string
        category:
          type: string
        description:
          type: string
        probability:
          type: integer
        impact:
          type: integer
        severity:
          type: integer
        rag:
          type: string
        mitigation:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        dueDate:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - projectId
        - category
        - description
        - probability
        - impact
        - severity
        - rag
    RiskCreate:
      type: object
      required:
        - projectId
        - category
        - description
        - probability
        - impact
      properties:
        projectId:
          type: string
        category:
          type: string
        description:
          type: string
        probability:
          type: integer
        impact:
          type: integer
        mitigation:
          type: string
        owner:
          type: string
        dueDate:
          type: string
          format: date-time
    RiskUpdate:
      type: object
      properties:
        category:
          type: string
        description:
          type: string
        probability:
          type: integer
        impact:
          type: integer
        severity:
          type: integer
        rag:
          type: string
        mitigation:
          type: string
        owner:
          type: string
        dueDate:
          type: string
          format: date-time
    Finding:
      type: object
      properties:
        id:
          type: string
        projectId:
          type: string
        title:
          type: string
        evidence:
          type: string
          nullable: true
        impact:
          type: string
        recommendation:
          type: string
        quickWin:
          type: boolean
        effortDays:
          type: integer
          nullable: true
        responsibleR:
          type: string
          nullable: true
        accountableA:
          type: string
          nullable: true
        targetDate:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
      required:
        - id
        - projectId
        - title
        - impact
        - recommendation
        - quickWin
        - status
    FindingCreate:
      type: object
      required:
        - projectId
        - title
        - impact
        - recommendation
        - responsibleR
        - accountableA
      properties:
        projectId:
          type: string
        title:
          type: string
        evidence:
          type: string
        impact:
          type: string
        recommendation:
          type: string
        quickWin:
          type: boolean
        effortDays:
          type: integer
        responsibleR:
          type: string
        accountableA:
          type: string
        targetDate:
          type: string
          format: date-time
        status:
          type: string
    FindingUpdate:
      type: object
      properties:
        title:
          type: string
        evidence:
          type: string
        impact:
          type: string
        recommendation:
          type: string
        quickWin:
          type: boolean
        effortDays:
          type: integer
        responsibleR:
          type: string
        accountableA:
          type: string
        targetDate:
          type: string
          format: date-time
        status:
          type: string
