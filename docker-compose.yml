services:
  db:
    image: postgres:15
    container_name: auditoria-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  api:
    build:
      context: ./api
    container_name: auditoria-api
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      PORT: ${API_PORT:-4000}
      FILE_STORAGE_PATH: ${FILE_STORAGE_PATH:-/usr/src/app/storage}
      CLIENT_URL: ${CLIENT_URL}
      SUPERSET_BASE_URL: ${SUPERSET_BASE_URL}
      SUPERSET_USERNAME: ${SUPERSET_USERNAME}
      SUPERSET_PASSWORD: ${SUPERSET_PASSWORD}
      SUPERSET_GUEST_USERNAME: ${SUPERSET_GUEST_USERNAME:-auditoria-app}
    depends_on:
      - db
    ports:
      - "${API_PORT:-4000}:4000"
    volumes:
      - api-storage:/usr/src/app/storage
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${API_PORT:-4000}/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  web:
    build:
      context: ./web
    container_name: auditoria-web
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:4000/api}
    depends_on:
      - api
    ports:
      - "${WEB_PORT:-5173}:5173"

  superset:
    image: apache/superset:latest
    container_name: auditoria-superset
    restart: unless-stopped
    depends_on:
      - db
    environment:
      SUPERSET_ENV: development
      SUPERSET_LOAD_EXAMPLES: "no"
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY:-superset-change-me}
      SUPERSET_FEATURE_EMBEDDED_SUPERSET: "True"
    ports:
      - "${SUPERSET_PORT:-8088}:8088"
    volumes:
      - superset-home:/app/superset_home

volumes:
  postgres-data:
  api-storage:
  superset-home:
