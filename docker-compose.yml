services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auditoria
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auditoria"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:postgres@db:5432/auditoria
      REDIS_URL: redis://redis:6379
      FRONTEND_ORIGIN: http://localhost:8080
      DISABLE_QUEUES: "true"
      PORT: "4000"
      JWT_SECRET: supersecret
      JWT_REFRESH_SECRET: supersecretrefresh
      CLIENT_URL: http://localhost:8080
      FILE_STORAGE_PATH: /usr/src/app/storage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "4000:4000"
    volumes:
      - api-storage:/usr/src/app/storage

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - "8080:80"

volumes:
  postgres-data:
  api-storage:
